// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

/*
Package auth is a generated protocol buffer package.

It is generated from these files:
	user.proto

It has these top-level messages:
	UserInfo
	Identity
	Void
*/
package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UserInfo struct {
	ID        int64  `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Phone     string `protobuf:"bytes,2,opt,name=Phone" json:"Phone,omitempty"`
	Email     string `protobuf:"bytes,3,opt,name=Email" json:"Email,omitempty"`
	Username  string `protobuf:"bytes,4,opt,name=Username" json:"Username,omitempty"`
	Address   string `protobuf:"bytes,5,opt,name=Address" json:"Address,omitempty"`
	Gender    int64  `protobuf:"varint,6,opt,name=Gender" json:"Gender,omitempty"`
	Birth     string `protobuf:"bytes,7,opt,name=Birth" json:"Birth,omitempty"`
	AvatarURL string `protobuf:"bytes,8,opt,name=AvatarURL" json:"AvatarURL,omitempty"`
}

func (m *UserInfo) Reset()                    { *m = UserInfo{} }
func (m *UserInfo) String() string            { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()               {}
func (*UserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UserInfo) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *UserInfo) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *UserInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserInfo) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UserInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *UserInfo) GetGender() int64 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *UserInfo) GetBirth() string {
	if m != nil {
		return m.Birth
	}
	return ""
}

func (m *UserInfo) GetAvatarURL() string {
	if m != nil {
		return m.AvatarURL
	}
	return ""
}

type Identity struct {
	ID int64 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
}

func (m *Identity) Reset()                    { *m = Identity{} }
func (m *Identity) String() string            { return proto.CompactTextString(m) }
func (*Identity) ProtoMessage()               {}
func (*Identity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Identity) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

type Void struct {
}

func (m *Void) Reset()                    { *m = Void{} }
func (m *Void) String() string            { return proto.CompactTextString(m) }
func (*Void) ProtoMessage()               {}
func (*Void) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*UserInfo)(nil), "auth.UserInfo")
	proto.RegisterType((*Identity)(nil), "auth.Identity")
	proto.RegisterType((*Void)(nil), "auth.Void")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for User service

type UserClient interface {
	GetUserInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*UserInfo, error)
	DeleteUser(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Void, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) GetUserInfo(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*UserInfo, error) {
	out := new(UserInfo)
	err := grpc.Invoke(ctx, "/auth.User/GetUserInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) DeleteUser(ctx context.Context, in *Identity, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := grpc.Invoke(ctx, "/auth.User/DeleteUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for User service

type UserServer interface {
	GetUserInfo(context.Context, *Identity) (*UserInfo, error)
	DeleteUser(context.Context, *Identity) (*Void, error)
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.User/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetUserInfo(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.User/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).DeleteUser(ctx, req.(*Identity))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserInfo",
			Handler:    _User_GetUserInfo_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _User_DeleteUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xcd, 0x6a, 0xc3, 0x30,
	0x10, 0x84, 0xb1, 0xe3, 0x38, 0xce, 0x16, 0x7a, 0x10, 0xa5, 0x2c, 0xa6, 0x87, 0xe0, 0x93, 0x2f,
	0xf5, 0xa1, 0x7d, 0x82, 0x14, 0x97, 0x60, 0xe8, 0xa1, 0x18, 0xd2, 0x6b, 0x51, 0xd1, 0x16, 0x1b,
	0x12, 0xa9, 0x48, 0x4a, 0xa1, 0x6f, 0xd8, 0xc7, 0x0a, 0x5a, 0xe5, 0x07, 0x7c, 0xfc, 0x66, 0xb4,
	0x9a, 0xdd, 0x01, 0x38, 0x38, 0xb2, 0xcd, 0x8f, 0x35, 0xde, 0x88, 0x4c, 0x1e, 0xfc, 0x50, 0xfd,
	0x27, 0x50, 0x6c, 0x1d, 0xd9, 0x4e, 0x7f, 0x1b, 0x71, 0x0b, 0x69, 0xd7, 0x62, 0xb2, 0x4a, 0xea,
	0x59, 0x9f, 0x76, 0xad, 0xb8, 0x83, 0xf9, 0xfb, 0x60, 0x34, 0x61, 0xba, 0x4a, 0xea, 0x65, 0x1f,
	0x21, 0xa8, 0xaf, 0x7b, 0x39, 0xee, 0x70, 0x16, 0x55, 0x06, 0x51, 0xc6, 0x7f, 0xb4, 0xdc, 0x13,
	0x66, 0x6c, 0x5c, 0x58, 0x20, 0x2c, 0xd6, 0x4a, 0x59, 0x72, 0x0e, 0xe7, 0x6c, 0x9d, 0x51, 0xdc,
	0x43, 0xbe, 0x21, 0xad, 0xc8, 0x62, 0xce, 0xa9, 0x27, 0x0a, 0x19, 0x2f, 0xa3, 0xf5, 0x03, 0x2e,
	0x62, 0x06, 0x83, 0x78, 0x80, 0xe5, 0xfa, 0x57, 0x7a, 0x69, 0xb7, 0xfd, 0x1b, 0x16, 0xec, 0x5c,
	0x85, 0xaa, 0x84, 0xa2, 0x53, 0xa4, 0xfd, 0xe8, 0xff, 0xa6, 0x97, 0x54, 0x39, 0x64, 0x1f, 0x66,
	0x54, 0x4f, 0x9f, 0x90, 0x85, 0xad, 0xc4, 0x23, 0xdc, 0x6c, 0xc8, 0x5f, 0x0f, 0x6f, 0x42, 0x19,
	0xcd, 0x79, 0xbc, 0x3c, 0xf1, 0xc5, 0xaf, 0x01, 0x5a, 0xda, 0x91, 0x27, 0x1e, 0x9e, 0xbe, 0x86,
	0xc8, 0x21, 0xe0, 0x2b, 0xe7, 0x72, 0x9f, 0x8f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x2e, 0xcc, 0x05,
	0x93, 0x6a, 0x01, 0x00, 0x00,
}
